---
- name: ensure we have the parameters necessary to install Golang
  hosts: 'localhost'
  connection: 'local'
  become: no
  gather_facts: no

  pre_tasks:
    - name: ensure all required variables are set
      fail:
        msg: 'This playbook requires {{ item }} to be set.'
      when: item not in vars and item not in hostvars[inventory_hostname]
      with_items:
        - origin_ci_hosts
        - origin_ci_connection

- name: install Golang on a new host
  hosts: '{{ origin_ci_hosts }}'
  connection: '{{ origin_ci_connection }}'
  become: yes
  become_user: root

  pre_tasks:
    - name: register origin_ci_isolated_package_version
      set_fact:
        origin_ci_isolated_package_version: '{{ origin_ci_golang_version }}'
      when: origin_ci_golang_version is defined
    
    - name: register origin_ci_isolated_disabledrepos
      set_fact:
        origin_ci_isolated_disabledrepos: '{{ origin_ci_golang_disabledrepos }}'
      when: origin_ci_golang_disabledrepos is defined

    - name: register origin_ci_golang_enabledrepos
      set_fact:
        origin_ci_isolated_enabledrepos: '{{ origin_ci_golang_enabledrepos }}'
      when: origin_ci_golang_enabledrepos is defined
      
    - name: register origin_ci_isolated_tmp_repourls
      set_fact:
        origin_ci_isolated_tmp_repourls: '{{ origin_ci_golang_tmp_repourls }}'
      when: origin_ci_golang_tmp_repourls is defined

  roles:
    - role: isolated-install
      origin_ci_isolated_package_name: 'golang'

  post_tasks:
    - name: persist the GOPATH
      lineinfile:
        dest: /etc/environment
        regexp: '^GOPATH='
        line: 'GOPATH={{ origin_ci_gopath | default("/data") }}'
        state: present
        create: true

    - name: ensure the GOPATH exists
      file:
        path: '{{ origin_ci_gopath | default("/data") }}'
        state: directory

    - name: install golang ecosystem tooling
      command: 'go get {{ item }}'
      with_items:
        - 'golang.org/x/tools/cmd/cover'
        - 'golang.org/x/tools/cmd/goimports'
        - 'github.com/tools/godep'
        - 'github.com/golang/lint/golint'
#        - 'github.com/josephspurrier/goversioninfo'

    # imagebuilder depends on 'context' pkg which is available only in golang 1.7 and higher
    - name: install imagebuilder for golang 1.7 and higher
      command: 'go get {{ item }}'
      with_items:
        - 'github.com/openshift/imagebuilder/cmd/imagebuilder'
      when: '{{ origin_ci_golang_version | version_compare("1.7", ">=") }}'
